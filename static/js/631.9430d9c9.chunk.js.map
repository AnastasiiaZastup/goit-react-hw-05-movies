{"version":3,"file":"static/js/631.9430d9c9.chunk.js","mappings":"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","sources":["components/api.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '025d4b48f27df18c675c623e6ea86fa8';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getCastMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const DivMov = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n`;\n","import { getMovieById } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { DivMov } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const backLink = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      try {\n        const movieData = await getMovieById(movieId);\n        setMovie(movieData);\n      } catch (error) {\n        toast.error('Oops! Something went wrong.');\n      }\n    };\n    fetchMovieData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLink}>Go back!</Link>\n      {movie && (\n        <DivMov>\n          <img\n            src={`${\n              movie.poster_path\n                ? 'https://image.tmdb.org/t/p/w500/' + movie.poster_path\n                : 'https://via.placeholder.com/182x273?text=' +\n                  movie.original_title\n            }`}\n            alt={movie.original_title}\n          />\n          <div>\n            <h2>{movie.original_title}</h2>\n            <h3>User score: {Math.round(movie.vote_average) * 10}%</h3>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <ul>\n              {movie.genres?.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </DivMov>\n      )}\n\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n      <Toaster />\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","getMovieByQuery","_ref2","_callee2","query","_context2","_x","getMovieById","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","cast","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","DivMov","styled","_templateObject","_taggedTemplateLiteral","MovieDetails","_location$state$from","_location$state","_movie$genres","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","useParams","backLink","state","from","useEffect","fetchMovieData","movieData","t0","toast","_jsxs","children","_jsx","Link","to","src","poster_path","original_title","alt","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Outlet","Toaster"],"sourceRoot":""}